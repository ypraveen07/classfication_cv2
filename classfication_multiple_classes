from multiprocessing.spawn import import_main_path
import cv2
import cv2
import numpy as np
import os

orb = cv2.ORB_create(nfeatures=1000)
# orb = cv2.xfeatures2d.SIFT_create()

# orb = cv2.FastFeatureDetector_create()
# orb.setNonmaxSuppression(False)

path = "D:\lincode\apple_orange\Photos-001"
images = []
classNames = []
mylist = os.listdir(path)

print("total classes detected", len(mylist))

for cl in mylist:
    imgCur = cv2.imread(f"{path}/{cl}",0)
    # th, imgCur = cv2.threshold(imgCur, 170, 255, cv2.THRESH_BINARY)
    images.append(imgCur)
    print(cl)
    classNames.append(os.path.splitext(cl)[0])

print(classNames)

def findDes(images):
    desList = []
    for img in images:
        kp,des = orb.detectAndCompute(img,None)
        desList.append(des)
    return desList



def findID(img,desList,thres=5):
    kp2,des2 = orb.detectAndCompute(img,None)
    bf = cv2.BFMatcher()
    matchList = []
    finalVal = -1
    try:
        for des in desList:
            matches = bf.knnMatch(des,des2, k = 2)
            good = []
            for m,n in matches:
                if m.distance <0.75*n.distance:
                    good.append([m])
            matchList.append(len(good))
        print(matchList)
    except:
        pass

    if len(matchList)!=0:
        if max(matchList)>thres:
            finalVal = matchList.index(max(matchList))
    return finalVal




desList = findDes(images)
print(len(desList))

# cap = cv2.VideoCapture(0)

# while True:
#     success,img2 = cap.read()
#     imgOrginal = img2.copy()
#     img2 = cv2.cvtColor(img2,cv2.COLOR_BGR2GRAY)
#     findID(img2,desList)

#     id = findID(img2,desList)
#     if id != -1:
#         cv2.putText(imgOrginal,classNames[id],(50,50),cv2.FONT_HERSHEY_COMPLEX,1,(0,0,255),1)

#     cv2.imshow("img2",imgOrginal)
#     cv2.waitKey(1)

img2 = cv2.imread("D:/lincode/apple_orange/abc/r (2).JPG")
# th, img2 = cv2.threshold(img2, 170, 255, cv2.THRESH_BINARY)

img2 = cv2.cvtColor(img2,cv2.COLOR_BGR2GRAY)
findID(img2,desList)
id = findID(img2,desList)
if id != -1:
    cv2.putText(img2,classNames[id],(50,50),cv2.FONT_HERSHEY_COMPLEX,1,(1,1,1),2)


img2 = cv2.resize(img2,(900,800))
cv2.imshow("img2",img2)
cv2.waitKey(0)
cv2.destroyAllWindows()
